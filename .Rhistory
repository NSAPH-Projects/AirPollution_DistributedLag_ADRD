if (i == 1) {
paste0(mod1, " < ", round(m1sp[i], 2))
} else if (i <= length(m1sp)) {
paste0(mod1, " in [", round(m1sp[i-1], 2), ", ", round(m1sp[i], 2),")")
} else {
paste0(mod1, " >= ", round(m1sp[i-1], 2))
}
})
} else {
grp1_idx <- lapply(m1sp, function(s) {
which(data[[mod1]] == s)
})
names(grp1_idx) <- sapply(m1sp, function(s) {
paste0(mod1, " = ", s)
})
}
return(grp1_idx)
}
create2GrpIdx <- function(model, data, mod1, mod2) {
grp1_idx <- createGrpIdx(model, data, mod1)
grp2_idx <- createGrpIdx(model, data, mod2)
comb_idx <- list()
for (i in 1:length(grp1_idx)) {
for (j in 1:length(grp2_idx)) {
comb_idx[[paste0(names(grp1_idx)[i], " & ", names(grp2_idx)[j])]] <-
intersect(grp1_idx[[i]], grp2_idx[[j]])
}
}
return(comb_idx)
}
allDLM <- estDLM(hdlm, qid_dat_agg, group.index = list("all" = 1:qid_dat_agg[,.N]))
plotDLM(allDLM) + theme_bw(base_size = 24)
ageDLM <- estDLM(hdlm, qid_dat_agg, createGrpIdx(hdlm, qid_dat_agg, "age_cat"))
plotDLM(ageDLM)
raceDLM <- estDLM(hdlm, qid_dat_agg, createGrpIdx(hdlm, qid_dat_agg, "race"))
plotDLM(raceDLM)
dualDLM <- estDLM(hdlm, qid_dat_agg, createGrpIdx(hdlm, qid_dat_agg, "dual_any"))
plotDLM(dualDLM)
hdlm <- dlmtree(lograte ~ factor(age_cat) + dual_any + factor(race) + factor(year) + factor(state) +
his + blk + PIR + pov + ed + oo + dens + avg_age + sexM,
data = qid_dat_agg,
exposure.data = exp_dat,
dlm.type = "shared",
tree.modifiers = c("dual_any", "race", "age_cat", "region"),
# modifier.splits = 3,
tree.params.tdlm = c(.1, 4),
tree.params.mod = c(.1, 4),
weights = wt,
n.trees = 20, n.burn = 500, n.iter = 1000, n.thin = 5,
save.data = FALSE)
plot(rowMeans(hdlm$termNodesMod))
plot(rowMeans(hdlm$termNodesDLM))
colMeans(hdlm$modCount > 0)
boxplot(hdlm$modInf)
plotDLM <- function(estDLM_data, groups = 1, trans = "log") {
if (trans == "log") {
estDLM_data$plotData$est <- 100*(exp(estDLM_data$plotData$est) - 1)
estDLM_data$plotData$upper <- 100*(exp(estDLM_data$plotData$upper) - 1)
estDLM_data$plotData$lower <- 100*(exp(estDLM_data$plotData$lower) - 1)
}
if (groups == 2) {
estDLM_data$plotData$grp1 <- sapply(strsplit(estDLM_data$plotDat$group, " & "), function(g) g[1])
estDLM_data$plotData$grp2 <- sapply(strsplit(estDLM_data$plotDat$group, " & "), function(g) g[2])
}
p <- ggplot(estDLM_data$plotData) +
geom_hline(yintercept = 0, color = "red") +
geom_ribbon(aes(x = time, ymin = lower, ymax = upper), fill = "grey") +
geom_line(aes(x = time, y = est)) +
facet_wrap(~group)
if (groups == 2) {
p <- p+ facet_grid(grp1 ~ grp2)
} else {
p <- p + facet_wrap(~group)
}
p <- p + theme_bw(base_size = 24) +
scale_x_continuous(breaks = 1:10, minor_breaks = NULL, expand = c(0, 0)) +
labs(x = "Years Prior", y = "% change in Hospitalization Rate")
p
}
createGrpIdx <- function(model, data, mod1) {
m1 <- which(model$modNames == mod1)
m1sp <- model$modSplitValRef[[m1]]
m1num <- model$modIsNum[m1]
if (model$modIsNum[m1]) {
grp1_idx <- lapply(1:(length(m1sp) + 1), function(i) {
if (i == 1) {
which(data[[mod1]] < m1sp[i])
} else if (i <= length(m1sp)) {
which(data[[mod1]] >= m1sp[i-1] & data[[mod1]] < m1sp[i])
} else {
which(data[[mod1]] >= m1sp[i-1])
}
})
names(grp1_idx) <- sapply(1:(length(m1sp) + 1), function(i) {
if (i == 1) {
paste0(mod1, " < ", round(m1sp[i], 2))
} else if (i <= length(m1sp)) {
paste0(mod1, " in [", round(m1sp[i-1], 2), ", ", round(m1sp[i], 2),")")
} else {
paste0(mod1, " >= ", round(m1sp[i-1], 2))
}
})
} else {
grp1_idx <- lapply(m1sp, function(s) {
which(data[[mod1]] == s)
})
names(grp1_idx) <- sapply(m1sp, function(s) {
paste0(mod1, " = ", s)
})
}
return(grp1_idx)
}
create2GrpIdx <- function(model, data, mod1, mod2) {
grp1_idx <- createGrpIdx(model, data, mod1)
grp2_idx <- createGrpIdx(model, data, mod2)
comb_idx <- list()
for (i in 1:length(grp1_idx)) {
for (j in 1:length(grp2_idx)) {
comb_idx[[paste0(names(grp1_idx)[i], " & ", names(grp2_idx)[j])]] <-
intersect(grp1_idx[[i]], grp2_idx[[j]])
}
}
return(comb_idx)
}
allDLM <- estDLM(hdlm, qid_dat_agg, group.index = list("all" = 1:qid_dat_agg[,.N]))
plotDLM(allDLM) + theme_bw(base_size = 24)
ageDLM <- estDLM(hdlm, qid_dat_agg, createGrpIdx(hdlm, qid_dat_agg, "age_cat"))
plotDLM(ageDLM)
raceDLM <- estDLM(hdlm, qid_dat_agg, createGrpIdx(hdlm, qid_dat_agg, "race"))
plotDLM(raceDLM)
dualDLM <- estDLM(hdlm, qid_dat_agg, createGrpIdx(hdlm, qid_dat_agg, "dual_any"))
plotDLM(dualDLM)
densDLM <- estDLM(hdlm, qid_dat_agg, createGrpIdx(hdlm, qid_dat_agg, "dens"))
plotDLM(densDLM)
regDLM <- estDLM(hdlm, qid_dat_agg, createGrpIdx(hdlm, qid_dat_agg, "region"))
plotDLM(regDLM)
hdlm$modPairs
raceageDLM <- estDLM(hdlm, qid_dat_agg, create2GrpIdx(hdlm, qid_dat_agg, "age_cat", "race"))
plotDLM(raceageDLM, 2) + theme_bw(base_size = 24)
racedualDLM <- estDLM(hdlm, qid_dat_agg, create2GrpIdx(hdlm, qid_dat_agg, "dual_any", "race"))
plotDLM(racedualDLM, 2) + theme_bw(base_size = 24)
agedualDLM <- estDLM(hdlm, qid_dat_agg, create2GrpIdx(hdlm, qid_dat_agg, "dual_any", "age_cat"))
plotDLM(agedualDLM, 2) + theme_bw(base_size = 24)
raceregionDLM <- estDLM(hdlm, qid_dat_agg, create2GrpIdx(hdlm, qid_dat_agg, "race", "region"))
plotDLM(raceregionDLM, 2) + theme_bw(base_size = 24)
ageregionDLM <- estDLM(hdlm, qid_dat_agg, create2GrpIdx(hdlm, qid_dat_agg, "age_cat", "region"))
plotDLM(ageregionDLM, 2) + theme_bw(base_size = 24)
tdlm <- tdlnm(lograte ~ factor(age_cat) + dual_any + factor(race) + factor(year) +# factor(state) +
his + blk + PIR + pov + ed + oo + dens + avg_age + sexM,
data = qid_dat_agg,
exposure.data = exp_dat,
exposure.splits = 0,
#tree.params = c(.1, 4),
weights = wt,
n.trees = 10, n.burn = 1000, n.iter = 2000, n.thin = 1)
plot(rowMeans(tdlm$termNodes))
s <- summary(tdlm)
plot(s)
m3 <- bam(lograte ~ cb_dlm + factor(age_cat) + dual_any + factor(race) + factor(year) + #factor(state) +
his + blk + PIR + pov + ed + oo + dens + avg_age + sexM,
data = qid_dat_agg, weights = wt)
cp_dlm <- crosspred(cb_dlm, m3, cen = 0, at = 0:1, bylag = 0.2)
plotdat <- data.frame(lag = seq(1, 10, by = 0.2), est = 100*(exp(cp_dlm$matfit[2,])-1),
low = 100*(exp(cp_dlm$matlow[2,])-1), high = 100*(exp(cp_dlm$mathigh[2,])-1))
ggplot(plotdat) +
geom_hline(yintercept = 0, color = "red") +
geom_ribbon(aes(x = lag, ymin = low, ymax = high), fill = "grey") +
geom_line(aes(x = lag, y = est)) + theme_bw(base_size = 24) +
scale_x_continuous(breaks = 1:10) +
labs(x = "Years Prior", y = "% Change in Hospitalization Rate")
tdlm <- tdlnm(lograte ~ factor(age_cat) + dual_any + factor(race) + factor(year) +# factor(state) +
his + blk + PIR + pov + ed + oo + dens + avg_age + sexM,
data = qid_dat_agg,
exposure.data = exp_dat,
exposure.splits = 0,
#tree.params = c(.1, 4),
weights = wt,
n.trees = 10, n.burn = 1000, n.iter = 2000, n.thin = 1)
plot(rowMeans(tdlm$termNodes))
s <- summary(tdlm)
plot(s)
hdlm <- dlmtree(lograte ~ factor(age_cat) + dual_any + factor(race) + factor(year) + #factor(state) +
his + blk + PIR + pov + ed + oo + dens + avg_age + sexM,
data = qid_dat_agg,
exposure.data = exp_dat,
dlm.type = "shared",
tree.modifiers = c("dual_any", "race", "age_cat"),
# modifier.splits = 3,
tree.params.tdlm = c(.1, 4),
tree.params.mod = c(.1, 4),
weights = wt,
n.trees = 20, n.burn = 500, n.iter = 1000, n.thin = 5,
save.data = FALSE)
plot(rowMeans(hdlm$termNodesMod))
plot(rowMeans(hdlm$termNodesDLM))
colMeans(hdlm$modCount > 0)
boxplot(hdlm$modInf)
plotDLM <- function(estDLM_data, groups = 1, trans = "log") {
if (trans == "log") {
estDLM_data$plotData$est <- 100*(exp(estDLM_data$plotData$est) - 1)
estDLM_data$plotData$upper <- 100*(exp(estDLM_data$plotData$upper) - 1)
estDLM_data$plotData$lower <- 100*(exp(estDLM_data$plotData$lower) - 1)
}
if (groups == 2) {
estDLM_data$plotData$grp1 <- sapply(strsplit(estDLM_data$plotDat$group, " & "), function(g) g[1])
estDLM_data$plotData$grp2 <- sapply(strsplit(estDLM_data$plotDat$group, " & "), function(g) g[2])
}
p <- ggplot(estDLM_data$plotData) +
geom_hline(yintercept = 0, color = "red") +
geom_ribbon(aes(x = time, ymin = lower, ymax = upper), fill = "grey") +
geom_line(aes(x = time, y = est)) +
facet_wrap(~group)
if (groups == 2) {
p <- p+ facet_grid(grp1 ~ grp2)
} else {
p <- p + facet_wrap(~group)
}
p <- p + theme_bw(base_size = 24) +
scale_x_continuous(breaks = 1:10, minor_breaks = NULL, expand = c(0, 0)) +
labs(x = "Years Prior", y = "% change in Hospitalization Rate")
p
}
createGrpIdx <- function(model, data, mod1) {
m1 <- which(model$modNames == mod1)
m1sp <- model$modSplitValRef[[m1]]
m1num <- model$modIsNum[m1]
if (model$modIsNum[m1]) {
grp1_idx <- lapply(1:(length(m1sp) + 1), function(i) {
if (i == 1) {
which(data[[mod1]] < m1sp[i])
} else if (i <= length(m1sp)) {
which(data[[mod1]] >= m1sp[i-1] & data[[mod1]] < m1sp[i])
} else {
which(data[[mod1]] >= m1sp[i-1])
}
})
names(grp1_idx) <- sapply(1:(length(m1sp) + 1), function(i) {
if (i == 1) {
paste0(mod1, " < ", round(m1sp[i], 2))
} else if (i <= length(m1sp)) {
paste0(mod1, " in [", round(m1sp[i-1], 2), ", ", round(m1sp[i], 2),")")
} else {
paste0(mod1, " >= ", round(m1sp[i-1], 2))
}
})
} else {
grp1_idx <- lapply(m1sp, function(s) {
which(data[[mod1]] == s)
})
names(grp1_idx) <- sapply(m1sp, function(s) {
paste0(mod1, " = ", s)
})
}
return(grp1_idx)
}
create2GrpIdx <- function(model, data, mod1, mod2) {
grp1_idx <- createGrpIdx(model, data, mod1)
grp2_idx <- createGrpIdx(model, data, mod2)
comb_idx <- list()
for (i in 1:length(grp1_idx)) {
for (j in 1:length(grp2_idx)) {
comb_idx[[paste0(names(grp1_idx)[i], " & ", names(grp2_idx)[j])]] <-
intersect(grp1_idx[[i]], grp2_idx[[j]])
}
}
return(comb_idx)
}
allDLM <- estDLM(hdlm, qid_dat_agg, group.index = list("all" = 1:qid_dat_agg[,.N]))
plotDLM(allDLM) + theme_bw(base_size = 24)
ageDLM <- estDLM(hdlm, qid_dat_agg, createGrpIdx(hdlm, qid_dat_agg, "age_cat"))
plotDLM(ageDLM)
raceDLM <- estDLM(hdlm, qid_dat_agg, createGrpIdx(hdlm, qid_dat_agg, "race"))
plotDLM(raceDLM)
dualDLM <- estDLM(hdlm, qid_dat_agg, createGrpIdx(hdlm, qid_dat_agg, "dual_any"))
plotDLM(dualDLM)
raceageDLM <- estDLM(hdlm, qid_dat_agg, create2GrpIdx(hdlm, qid_dat_agg, "age_cat", "race"))
plotDLM(raceageDLM, 2) + theme_bw(base_size = 24)
racedualDLM <- estDLM(hdlm, qid_dat_agg, create2GrpIdx(hdlm, qid_dat_agg, "dual_any", "race"))
plotDLM(racedualDLM, 2) + theme_bw(base_size = 24)
agedualDLM <- estDLM(hdlm, qid_dat_agg, create2GrpIdx(hdlm, qid_dat_agg, "dual_any", "age_cat"))
plotDLM(agedualDLM, 2) + theme_bw(base_size = 24)
rm(list = ls())
gc()
##### Setup #####
AD_ADRD <- "ADRD" # AD or ADRD
code_type <- "any" # primary or any
n_threads = 2
Sys.setenv(OMP_NUM_THREADS = n_threads)
library(data.table)
library(fst)
library(ggplot2)
options(stringsAsFactors = FALSE)
setDTthreads(threads = n_threads)
threads_fst(n_threads)
dir_data <- "/n/home_fasse/dmork/projects/adrd_dlm/data/"
##### Load relevant data #####
qid_dat <- read_fst(paste0(dir_data, "analysis/HDLM/contUS_agg_", AD_ADRD, "_",
code_type, "_qid.fst"), as.data.table = TRUE)
pm25_dat <- read_fst(paste0(dir_data, "analysis/HDLM/contUS_agg_", AD_ADRD, "_",
code_type, "_pm25.fst"), as.data.table = TRUE)
##### Merge PM/qid data #####
qid_dat <- merge(qid_dat, pm25_dat, by = c("qid", "year"), all.x = TRUE)
rm(pm25_dat)
setnames(qid_dat, "zip.x", "zip")
##### Create aggregated datasets #####
qid_dat[, PIR := medianhousevalue / (medhouseholdincome + 0.001)]
qid_dat[, age_corrected := entry_age + year - entry]
qid_dat <- qid_dat[!is.infinite(qid_dat$PIR) &
complete.cases(qid_dat[,.(year, age_corrected, dual, race, sexM,
region, statecode,
education, poverty, pct_blk, hispanic,
popdensity, pct_owner_occ, PIR,
winter_tmmx, winter_rmax,
summer_tmmx, summer_rmax,
lag1, lag2, lag3, lag4, lag5,
lag6, lag7, lag8, lag9, lag10)])]
qid_dat <- qid_dat[lag1 > 0 & lag2 > 0 & lag3 > 0 & lag4 > 0 & lag5 > 0 &
lag6 > 0 & lag7 > 0 & lag8 > 0 & lag9 > 0 & lag10 > 0]
qid_dat[, .N]
qid_dat[, dual := dual == "1"]
qid_dat[, dual_any := ifelse(any(dual), "Yes", "No"), by = qid]
qid_dat[, sex := NULL]
qid_dat[, sex := ifelse(sexM, "M", "F"), by = qid]
qid_dat[, age_cat := cut(age_corrected, breaks = c(74, 84, 114), labels = c("75-84", "85+"))]
qid_dat_agg_zip <- qid_dat[,.(at_risk = .N, n_hosp = sum(first_hosp),
rate = sum(first_hosp / .N),
avg_age = mean(age_corrected), avg_wht = mean(race == "wht"),
avg_blk = mean(race == "blk"), avg_his = mean(race == "his"),
avg_dual = mean(dual_any), avg_male = mean(sexM),
zip_his = mean(hispanic), zip_blk = mean(pct_blk),
zip_PIR = mean(PIR), zip_pov = mean(poverty), zip_ed = mean(education),
zip_oo = mean(pct_owner_occ), zip_dens = mean(popdensity),
s_tmmx = mean(summer_tmmx), w_tmmx = mean(winter_tmmx),
s_rmax = mean(summer_rmax), w_rmax = mean(winter_rmax),
lat = mean(latitude), long = mean(longitude),
state = first(statecode), region = first(region),
pm1 = mean(lag1), pm2 = mean(lag2), pm3 = mean(lag3),
pm4 = mean(lag4), pm5 = mean(lag5), pm6 = mean(lag4),
pm7 = mean(lag7), pm8 = mean(lag8), pm9 = mean(lag9),
pm10 = mean(lag10)),
by = .(year, zip)]
qid_dat_agg_zip <- qid_dat[,.(at_risk = .N, n_hosp = sum(first_hosp),
rate = sum(first_hosp / .N),
avg_age = mean(age_corrected), avg_wht = mean(race == "wht"),
avg_blk = mean(race == "blk"), avg_his = mean(race == "his"),
avg_dual = mean(dual_any == "Yes"), avg_male = mean(sex == "M"),
zip_his = mean(hispanic), zip_blk = mean(pct_blk),
zip_PIR = mean(PIR), zip_pov = mean(poverty), zip_ed = mean(education),
zip_oo = mean(pct_owner_occ), zip_dens = mean(popdensity),
s_tmmx = mean(summer_tmmx), w_tmmx = mean(winter_tmmx),
s_rmax = mean(summer_rmax), w_rmax = mean(winter_rmax),
lat = mean(latitude), long = mean(longitude),
state = first(statecode), region = first(region),
pm1 = mean(lag1), pm2 = mean(lag2), pm3 = mean(lag3),
pm4 = mean(lag4), pm5 = mean(lag5), pm6 = mean(lag4),
pm7 = mean(lag7), pm8 = mean(lag8), pm9 = mean(lag9),
pm10 = mean(lag10)),
by = .(year, zip)]
qid_dat_agg_zip[rate == 0, rate := min(qid_dat_agg_zip$rate[qid_dat_agg_zip$rate > 0])]
qid_dat_agg_zip[, lograte := log(rate)]
Q
qid_agg_dat[,.N]
qid_dat_agg_zip[,.N]
hist(qid_dat_agg_zip$at_risk)
summary(qid_dat_agg_zip$at_risk)
qid_dat_agg <- qid_dat_agg_zip
wt <- sqrt(qid_dat_agg$at_risk)
sum(wt)^2 / sum(wt^2)
wt <- (qid_dat_agg$at_risk)
sum(wt)^2 / sum(wt^2)
wt <- sqrt(qid_dat_agg$at_risk)
sum(wt)^2 / sum(wt^2)
exp_dat <- as.matrix(qid_dat_agg[, paste0("pm", 1:10)])
exp_iqr <- IQR(exp_dat)
exp_mean <- mean(exp_dat)
exp_dat <- (exp_dat - exp_mean) / exp_iqr
names(qid_dat_agg_zip)
cb_dlm <- crossbasis(as.matrix(exp_dat), c(1, 10),
arglag = list(fun = "ns", knots = exp(seq(0, log(10), length.out = 3))[2],
intercept = TRUE),
argvar = list(fun = "lin"))
m3 <- bam(lograte ~ factor(year) + factor(state) +
avg_male + avg_dual + avg_his + avg_blk + avg_wht + avg_age +
zip_his + zip_blk + zip_PIR + zip_pov + zip_ed + zip_oo + zip_dens,
data = qid_dat_agg, weights = wt)
cp_dlm <- crosspred(cb_dlm, m3, cen = 0, at = 0:1, bylag = 0.2)
plotdat <- data.frame(lag = seq(1, 10, by = 0.2), est = 100*(exp(cp_dlm$matfit[2,])-1),
low = 100*(exp(cp_dlm$matlow[2,])-1), high = 100*(exp(cp_dlm$mathigh[2,])-1))
ggplot(plotdat) +
geom_hline(yintercept = 0, color = "red") +
geom_ribbon(aes(x = lag, ymin = low, ymax = high), fill = "grey") +
geom_line(aes(x = lag, y = est)) + theme_bw(base_size = 24) +
scale_x_continuous(breaks = 1:10) +
labs(x = "Years Prior", y = "% Change in Hospitalization Rate")
cb_dlm <- crossbasis(as.matrix(exp_dat), c(1, 10),
arglag = list(fun = "ns", knots = exp(seq(0, log(10), length.out = 3))[2],
intercept = TRUE),
argvar = list(fun = "lin"))
m3 <- bam(lograte ~ factor(year) + factor(state) +
avg_male + avg_dual + avg_his + avg_blk + avg_wht + avg_age +
zip_his + zip_blk + zip_PIR + zip_pov + zip_ed + zip_oo + zip_dens,
data = qid_dat_agg, weights = wt)
cp_dlm <- crosspred(cb_dlm, m3, cen = 0, at = 0:1, bylag = 0.2)
library(dlnm)
library(mgcv)
cb_dlm <- crossbasis(as.matrix(exp_dat), c(1, 10),
arglag = list(fun = "ns", knots = exp(seq(0, log(10), length.out = 3))[2],
intercept = TRUE),
argvar = list(fun = "lin"))
summary(m3)
m3 <- bam(lograte ~ cb_dlm + factor(year) + factor(state) +
avg_male + avg_dual + avg_his + avg_blk + avg_wht + avg_age +
zip_his + zip_blk + zip_PIR + zip_pov + zip_ed + zip_oo + zip_dens,
data = qid_dat_agg, weights = wt)
cp_dlm <- crosspred(cb_dlm, m3, cen = 0, at = 0:1, bylag = 0.2)
plotdat <- data.frame(lag = seq(1, 10, by = 0.2), est = 100*(exp(cp_dlm$matfit[2,])-1),
low = 100*(exp(cp_dlm$matlow[2,])-1), high = 100*(exp(cp_dlm$mathigh[2,])-1))
ggplot(plotdat) +
geom_hline(yintercept = 0, color = "red") +
geom_ribbon(aes(x = lag, ymin = low, ymax = high), fill = "grey") +
geom_line(aes(x = lag, y = est)) + theme_bw(base_size = 24) +
scale_x_continuous(breaks = 1:10) +
labs(x = "Years Prior", y = "% Change in Hospitalization Rate")
m3 <- bam(lograte ~ cb_dlm + factor(year) + factor(state) +
avg_male + avg_dual + avg_his + avg_blk + avg_wht + avg_age +
zip_his + zip_blk + zip_PIR + zip_pov + zip_ed + zip_oo + zip_dens,
data = qid_dat_agg)
cp_dlm <- crosspred(cb_dlm, m3, cen = 0, at = 0:1, bylag = 0.2)
plotdat <- data.frame(lag = seq(1, 10, by = 0.2), est = 100*(exp(cp_dlm$matfit[2,])-1),
low = 100*(exp(cp_dlm$matlow[2,])-1), high = 100*(exp(cp_dlm$mathigh[2,])-1))
ggplot(plotdat) +
geom_hline(yintercept = 0, color = "red") +
geom_ribbon(aes(x = lag, ymin = low, ymax = high), fill = "grey") +
geom_line(aes(x = lag, y = est)) + theme_bw(base_size = 24) +
scale_x_continuous(breaks = 1:10) +
labs(x = "Years Prior", y = "% Change in Hospitalization Rate")
library(dlmtree)
tdlm <- tdlnm(lograte ~ cb_dlm + factor(year) + factor(state) +
avg_male + avg_dual + avg_his + avg_blk + avg_wht + avg_age +
zip_his + zip_blk + zip_PIR + zip_pov + zip_ed + zip_oo + zip_dens,
data = qid_dat_agg,
exposure.data = exp_dat,
exposure.splits = 0,
#tree.params = c(.1, 4),
#weights = wt,
n.trees = 10, n.burn = 200, n.iter = 500, n.thin = 5)
plot(rowMeans(tdlm$termNodes))
s <- summary(tdlm)
plot(s)
write_fst(qid_dat_agg_zip, paste0(dir_data, "analysis/HDLM/contUS_agg_", AD_ADRD, "_",
code_type, "_agg_zip2.fst"))
m3 <- bam(lograte ~ cb_dlm + factor(year) + #factor(state) +
avg_male + avg_dual + avg_his + avg_blk + avg_wht + avg_age +
zip_his + zip_blk + zip_PIR + zip_pov + zip_ed + zip_oo + zip_dens,
data = qid_dat_agg)
cp_dlm <- crosspred(cb_dlm, m3, cen = 0, at = 0:1, bylag = 0.2)
plotdat <- data.frame(lag = seq(1, 10, by = 0.2), est = 100*(exp(cp_dlm$matfit[2,])-1),
low = 100*(exp(cp_dlm$matlow[2,])-1), high = 100*(exp(cp_dlm$mathigh[2,])-1))
ggplot(plotdat) +
geom_hline(yintercept = 0, color = "red") +
geom_ribbon(aes(x = lag, ymin = low, ymax = high), fill = "grey") +
geom_line(aes(x = lag, y = est)) + theme_bw(base_size = 24) +
scale_x_continuous(breaks = 1:10) +
labs(x = "Years Prior", y = "% Change in Hospitalization Rate")
m3 <- bam(lograte ~ cb_dlm + factor(year) + #factor(state) +
avg_male + avg_dual + avg_his + avg_blk + avg_wht + avg_age +
zip_his + zip_blk + zip_PIR + zip_pov + zip_ed + zip_oo + zip_dens,
data = qid_dat_agg, weights = wt)
cp_dlm <- crosspred(cb_dlm, m3, cen = 0, at = 0:1, bylag = 0.2)
plotdat <- data.frame(lag = seq(1, 10, by = 0.2), est = 100*(exp(cp_dlm$matfit[2,])-1),
low = 100*(exp(cp_dlm$matlow[2,])-1), high = 100*(exp(cp_dlm$mathigh[2,])-1))
ggplot(plotdat) +
geom_hline(yintercept = 0, color = "red") +
geom_ribbon(aes(x = lag, ymin = low, ymax = high), fill = "grey") +
geom_line(aes(x = lag, y = est)) + theme_bw(base_size = 24) +
scale_x_continuous(breaks = 1:10) +
labs(x = "Years Prior", y = "% Change in Hospitalization Rate")
m3 <- bam(lograte ~ cb_dlm + factor(year) + factor(state) +
avg_male + avg_dual + avg_his + avg_blk + avg_wht + avg_age +
zip_his + zip_blk + zip_PIR + zip_pov + zip_ed + zip_oo + zip_dens,
data = qid_dat_agg, weights = wt)
cp_dlm <- crosspred(cb_dlm, m3, cen = 0, at = 0:1, bylag = 0.2)
plotdat <- data.frame(lag = seq(1, 10, by = 0.2), est = 100*(exp(cp_dlm$matfit[2,])-1),
low = 100*(exp(cp_dlm$matlow[2,])-1), high = 100*(exp(cp_dlm$mathigh[2,])-1))
ggplot(plotdat) +
geom_hline(yintercept = 0, color = "red") +
geom_ribbon(aes(x = lag, ymin = low, ymax = high), fill = "grey") +
geom_line(aes(x = lag, y = est)) + theme_bw(base_size = 24) +
scale_x_continuous(breaks = 1:10) +
labs(x = "Years Prior", y = "% Change in Hospitalization Rate")
tdlm <- tdlnm(lograte ~ cb_dlm + factor(year) + factor(state) +
avg_male + avg_dual + avg_his + avg_blk + avg_wht + avg_age +
zip_his + zip_blk + zip_PIR + zip_pov + zip_ed + zip_oo + zip_dens,
data = qid_dat_agg,
exposure.data = exp_dat,
exposure.splits = 0,
tree.params = c(.1, 4),
weights = wt,
n.trees = 10, n.burn = 200, n.iter = 500, n.thin = 5)
plot(rowMeans(tdlm$termNodes))
s <- summary(tdlm)
plot(s)
plotdat2 <- data.frame(lag = 1:10, est = 100*(exp(s$matfit)-1),
low = 100*(exp(s$cilower)-1), high = 100*(exp(s$ciupper)-1))
ggplot(plotdat2) +
geom_hline(yintercept = 0, color = "red") +
geom_ribbon(aes(x = lag, ymin = low, ymax = high), fill = "grey") +
geom_line(aes(x = lag, y = est)) + theme_bw(base_size = 24) +
scale_x_continuous(breaks = 1:10) +
labs(x = "Years Prior", y = "% Change in Hospitalization Rate")
write_fst(qid_dat_agg_zip, paste0(dir_data, "analysis/HDLM/contUS_agg_", AD_ADRD, "_",
code_type, "_agg_zip2.fst"))
