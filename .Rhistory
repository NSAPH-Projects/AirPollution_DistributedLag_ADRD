# hospitalization data
hosp_dat <- read_fst(paste0(dir_data,
"hospitalization/First_hosp_", AD_ADRD, "_", code_type, ".fst"),
as.data.table = TRUE)
hosp_dat[, first_hosp := TRUE]
pre2009_qid <- hosp_dat[year < 2009, QID]
hosp_dat <- hosp_dat[year >= 2009]
# FFS beneficiary enrollment history
qid_entry_exit <- read_fst(paste0(dir_data, "denom/qid_entry_exit.fst"),
as.data.table = TRUE)
qid_entry_exit <- qid_entry_exit[exit >= 2009 & # find all QIDs with exit after 2009
!(qid %in% pre2009_qid) & # eliminate prior ADRD hosp
cont_enroll == TRUE] # restrict to continuously enrolled
setkey(qid_entry_exit, qid)
# FFS beneficiary yearly data
qid_dat <- data.table()
for (yr in 2009:2016) {
cat("\nReading year", yr)
dt <- read_fst(paste0(dir_data, "denom/qid_data_", yr, ".fst"),
as.data.table = TRUE)
dt <- dt[zip %in% region_zips & # restrict to region zipcodes
qid %in% qid_entry_exit$qid & # restrict to exit after 2009, continuous enrollment, no prior ADRD hosp
!(qid %in% hosp_dat[year < yr, QID])] # eliminate ADRD hosp prior to current year
cat(" -", dt[,.N], "records")
qid_dat <- rbindlist(list(qid_dat, dt))
rm(dt)
}
setkey(qid_dat, year, zip, qid)
##### 2. Merge data sources #####
qid_dat <- merge(qid_dat, hosp_dat[, .(QID, year, first_hosp)],
by.x = c("year", "qid"), by.y = c("year", "QID"),
all.x = TRUE)
qid_dat[is.na(first_hosp), first_hosp := FALSE]
qid_dat <- merge(qid_dat, yr_zip_confounders, by = c("year", "zip"), all.x = TRUE)
qid_dat <- merge(qid_dat, qid_entry_exit, by = "qid", all.x = TRUE)
setkey(qid_dat, year, zip, qid)
write_fst(qid_dat, paste0(dir_data, "analysis/region", region_name, "_", AD_ADRD, "_",
code_type, "_qid.fst"))
rm(hosp_dat, yr_zip_confounders, qid_entry_exit, pre2009_qid); gc()
##### 3. Create corresponding exposure data #####
exposures <- c("pm25", "no2", "ozone") # from pm25, no2, ozone, tmmx, rmax, pr
for (e in exposures) {
cat("\nCreating exposure data:", e, "...")
qid_yr_exp <- read_fst(paste0(dir_data, "qid_yr_exposures/qid_yr_", e, ".fst"),
as.data.table = TRUE)
qid_yr_exp <- qid_yr_exp[qid %in% qid_dat$qid]
setkey(qid_yr_exp, qid)
exp_dat <- rbindlist(lapply(2016:2009, function(y) {
dt <- merge(qid_dat[year == y, .(qid, year, zip)],
qid_yr_exp[, c("qid", as.character(2000:y)), with = FALSE],
by = "qid", all.x = TRUE)
setnames(dt, c("qid", "year", "zip", paste0("lag", (y - 2000):0)))
dt
}), use.names = TRUE, fill = TRUE)
setkey(exp_dat, year, zip, qid)
write_fst(exp_dat, paste0(dir_data, "analysis/region", region_name, "_", AD_ADRD, "_",
code_type, "_", e, ".fst"))
rm(exp_dat)
cat(" complete.")
}
# ############################################################################ #
#' Project: ADRD Distributed Lag Analysis
#' Code: single state distributed lag analysis
#' Inputs: merged denominator and exposure data
#' Outputs:
#' Author: Daniel Mork
#' Last updated: Mar 09, 2022
#' Memory to run: 32 GB
# ############################################################################ #
rm(list = ls())
gc()
##### 0. Setup #####
state <- "MA"
AD_ADRD <- "ADRD" # AD or ADRD
code_type <- "any" # primary, secondary, or any
library(data.table)
library(fst)
library(NSAPHutils)
options(stringsAsFactors = FALSE)
setDTthreads(threads = 8)
dir_data <- "/nfs/home/D/dam9096/shared_space/ci3_analysis/dmork/Data/DLM_ADRD/"
##### 1. Load relevant data #####
qid_dat <- read_fst(paste0(dir_data, "analysis/state", state, "_", AD_ADRD, "_",
code_type, "_qid.fst"), as.data.table = TRUE)
pm25_dat <- read_fst(paste0(dir_data, "analysis/state", state, "_", AD_ADRD, "_",
code_type, "_pm25.fst"), as.data.table = TRUE)
##### 2. Restrict to complete follow-up 2009 through 2016, no deaths #####
pm25_dat <- as.matrix(pm25_dat[, -c(1:3)])[, 17:1] # reorder exposures, remove keys
idx <- which(rowSums(is.na(pm25_dat[, 1:10])) == 0 & # no missing exposures
rowSums(pm25_dat[, 1:10] == 0) == 0 & # no zero exposures
qid_dat$entry == 2000) # follow up from 2000
qid_dat <- qid_dat[idx]
pm25_dat <- pm25_dat[idx,]
##### Data fixes #####
qid_dat[, age_corrected := entry_age + year - entry]
qid_dat[, PIR := medianhousevalue/medhouseholdincome]
# clear missing data, infinite PIR
idx2 <- which(complete.cases(qid_dat[,.(year, age_corrected, dual, race, sexM,
education, poverty, medianhousevalue,
medhouseholdincome, pct_blk, hispanic,
popdensity, pct_owner_occ, PIR)]) &
!is.infinite(qid_dat$PIR))
qid_dat <- qid_dat[idx2]
pm25_dat <- pm25_dat[idx2,]
##### Remove QID after missing year of data #####
idx3 <- which(qid_dat$year == 2009)
qid_rm <- qid_dat[year == 2009, qid]
for (yr in 2010:2016) {
idx3 <- c(idx3, which(qid_dat$year == yr & qid_dat$qid %in% qid_rm))
qid_rm <- qid_dat[idx3][year == yr, qid]
}
qid_dat <- qid_dat[idx3]
pm25_dat <- pm25_dat[idx3, ]
setkey(qid_dat, year, zip, qid)
rm(idx, idx2, idx3, qid_rm)
##### Summary stats #####
qid_dat[, .N]
qid_dat[, uniqueN(qid)]
qid_dat[, sum(first_hosp)]
qid_dat[(first_hosp),mean(age)]
qid_dat[year==2009,mean(age)]
qid_dat[, sum(first_hosp)/uniqueN(qid)]
qid_dat[,.N,by=fips][,.N]
qid_dat[,.N,by=zip][,.N]
##### 5. DLM analysis - GAM #####
library(dlnm)
library(mgcv)
cb <- crossbasis(pm25_dat[,1:10], c(0, 9),
argvar = list(fun = "lin"),
arglag = list(fun = "ps"))
cb_pen <- cbPen(cb)
m2 <- bam(first_hosp ~ factor(year) - 1 + factor(fips) +
age + I(age^2) +
factor(dual) + factor(race) + factor(sexM) +
cb +
education + poverty + PIR + # price to income ratio
pct_blk + hispanic + popdensity + pct_owner_occ,
data = qid_dat,
paraPen = list(cb = cb_pen),
family = binomial,
nthreads = 8,
control = gam.control(trace = TRUE))
cp <- crosspred(cb, m2, cen = 5, at = seq(5, 15, by = 0.1), bylag = 0.2)
plot(cp, "slices", var = 6)
plot(cp, "overall")
summary(m2)
?smooth.terms
m2 <- bam(first_hosp ~ factor(year) - 1 + s(factor(fips), bs = "re") +
age + I(age^2) +
factor(dual) + factor(race) + factor(sexM) +
cb +
education + poverty + PIR + # price to income ratio
pct_blk + hispanic + popdensity + pct_owner_occ,
data = qid_dat,
paraPen = list(cb = cb_pen),
family = binomial,
nthreads = 8,
control = gam.control(trace = TRUE))
m2 <- bam(first_hosp ~ factor(year) - 1 + s(1, bs = "re", by = factor(fips)) +
age + I(age^2) +
factor(dual) + factor(race) + factor(sexM) +
cb +
education + poverty + PIR + # price to income ratio
pct_blk + hispanic + popdensity + pct_owner_occ,
data = qid_dat,
paraPen = list(cb = cb_pen),
family = binomial,
nthreads = 8,
control = gam.control(trace = TRUE))
qid_dat$fips <- factor(qid_dat$fips)
m2 <- bam(first_hosp ~ factor(year) - 1 + s(fips, bs = "re") +
age + I(age^2) +
factor(dual) + factor(race) + factor(sexM) +
cb +
education + poverty + PIR + # price to income ratio
pct_blk + hispanic + popdensity + pct_owner_occ,
data = qid_dat,
paraPen = list(cb = cb_pen),
family = binomial,
nthreads = 8,
control = gam.control(trace = TRUE))
cp <- crosspred(cb, m2, cen = 5, at = seq(5, 15, by = 0.1), bylag = 0.2)
plot(cp, "slices", var = 6)
cb <- crossbasis(pm25_dat[,2:10], c(1, 9),
argvar = list(fun = "lin"),
arglag = list(fun = "ps"))
cb_pen <- cbPen(cb)
m2 <- bam(first_hosp ~ factor(year) - 1 +
s(fips, bs = "re") + # random effect of county
age + I(age^2) +
factor(dual) + factor(race) + factor(sexM) +
cb +
education + poverty + PIR + # price to income ratio
pct_blk + hispanic + popdensity + pct_owner_occ,
data = qid_dat,
paraPen = list(cb = cb_pen),
family = binomial,
nthreads = 8,
control = gam.control(trace = TRUE))
cp <- crosspred(cb, m2, cen = 5, at = seq(5, 15, by = 0.1), bylag = 0.2)
plot(cp, "slices", var = 6)
plot(cp, "overall")
cb <- crossbasis(pm25_dat[,2:10], c(1, 9),
argvar = list(fun = "lin"),
arglag = list(fun = "cr", df = 4))
cb_pen <- cbPen(cb)
m2 <- bam(first_hosp ~ factor(year) - 1 +
s(fips, bs = "re") + # random effect of county
age + I(age^2) +
factor(dual) + factor(race) + factor(sexM) +
cb +
education + poverty + PIR + # price to income ratio
pct_blk + hispanic + popdensity + pct_owner_occ,
data = qid_dat,
paraPen = list(cb = cb_pen),
family = binomial,
nthreads = 8,
control = gam.control(trace = TRUE))
cp <- crosspred(cb, m2, cen = 5, at = seq(5, 15, by = 0.1), bylag = 0.2)
plot(cp, "slices", var = 6)
cb <- crossbasis(pm25_dat[,2:10], c(1, 9),
argvar = list(fun = "lin"),
arglag = list(fun = "ps", df = 4))
cb_pen <- cbPen(cb)
m2 <- bam(first_hosp ~ factor(year) - 1 +
s(fips, bs = "re") + # random effect of county
age + I(age^2) +
factor(dual) + factor(race) + factor(sexM) +
cb +
education + poverty + PIR + # price to income ratio
pct_blk + hispanic + popdensity + pct_owner_occ,
data = qid_dat,
paraPen = list(cb = cb_pen),
family = binomial,
nthreads = 8,
control = gam.control(trace = TRUE))
cp <- crosspred(cb, m2, cen = 5, at = seq(5, 15, by = 0.1), bylag = 0.2)
plot(cp, "slices", var = 6)
cp <- crosspred(cb, m2)#, cen = 5, at = seq(5, 15, by = 0.1), bylag = 0.2)
cb <- crossbasis(pm25_dat[,2:10], c(1, 9),
argvar = list(fun = "lin"),
arglag = list(fun = "ps", df = 5))
cb_pen <- cbPen(cb)
m2 <- bam(first_hosp ~ factor(year) - 1 +
s(fips, bs = "re") + # random effect of county
age + I(age^2) +
factor(dual) + factor(race) + factor(sexM) +
cb +
education + poverty + PIR + # price to income ratio
pct_blk + hispanic + popdensity + pct_owner_occ,
data = qid_dat,
paraPen = list(cb = cb_pen),
family = binomial,
nthreads = 8,
control = gam.control(trace = TRUE))
cp <- crosspred(cb, m2, cen = 5, at = seq(5, 15, by = 0.1), bylag = 0.2)
plot(cp, "slices", var = 6)
plot(cp, "overall")
plot(cp, "slices", var = 10)
m2 <- bam(first_hosp ~ factor(year) - 1 +
#s(fips, bs = "re") + # random effect of county
age + I(age^2) +
factor(dual) + factor(race) + factor(sexM) +
cb +
education + poverty + PIR + # price to income ratio
pct_blk + hispanic + popdensity + pct_owner_occ,
data = qid_dat,
paraPen = list(cb = cb_pen),
family = binomial,
nthreads = 8,
control = gam.control(trace = TRUE))
cp <- crosspred(cb, m2, cen = 5, at = seq(5, 15, by = 0.1), bylag = 0.2)
plot(cp, "slices", var = 10)
cb <- crossbasis(pm25_dat[,1:10], c(0, 9),
argvar = list(fun = "lin"),
arglag = list(fun = "ps", df = 5))
cb <- crossbasis(pm25_dat[,1:10], c(0, 9),
argvar = list(fun = "lin"),
arglag = list(fun = "ps"))
cb_pen <- cbPen(cb)
m2 <- bam(first_hosp ~ factor(year) - 1 +
#s(fips, bs = "re") + # random effect of county
age + I(age^2) +
factor(dual) + factor(race) + factor(sexM) +
cb +
education + poverty + PIR + # price to income ratio
pct_blk + hispanic + popdensity + pct_owner_occ,
data = qid_dat,
paraPen = list(cb = cb_pen),
family = binomial,
nthreads = 8,
control = gam.control(trace = TRUE))
cp <- crosspred(cb, m2, cen = 5, at = seq(5, 15, by = 0.1), bylag = 0.2)
plot(cp, "slices", var = 10)
plot(cp, "overall")
cb <- crossbasis(pm25_dat[,1:15], c(0, 14),
argvar = list(fun = "lin"),
arglag = list(fun = "ps"))
cb_pen <- cbPen(cb)
m2 <- bam(first_hosp ~ factor(year) - 1 +
#s(fips, bs = "re") + # random effect of county
age + I(age^2) +
factor(dual) + factor(race) + factor(sexM) +
cb +
education + poverty + PIR + # price to income ratio
pct_blk + hispanic + popdensity + pct_owner_occ,
data = qid_dat,
paraPen = list(cb = cb_pen),
family = binomial,
nthreads = 8,
control = gam.control(trace = TRUE))
cp <- crosspred(cb, m2, cen = 5, at = seq(5, 15, by = 0.1), bylag = 0.2)
plot(cp, "slices", var = 10)
plot(cp, "overall")
cb <- crossbasis(pm25_dat[,1:17], c(0, 16),
argvar = list(fun = "lin"),
arglag = list(fun = "ps"))
cb_pen <- cbPen(cb)
m2 <- bam(first_hosp ~ #factor(year) - 1 +
#s(fips, bs = "re") + # random effect of county
age + I(age^2) +
factor(dual) + factor(race) + factor(sexM) +
cb +
education + poverty + PIR + # price to income ratio
pct_blk + hispanic + popdensity + pct_owner_occ,
data = qid_dat,
paraPen = list(cb = cb_pen),
family = binomial,
nthreads = 8,
control = gam.control(trace = TRUE))
cp <- crosspred(cb, m2, cen = 5, at = seq(5, 15, by = 0.1), bylag = 0.2)
plot(cp, "slices", var = 10)
m2 <- bam(first_hosp ~ #factor(year) - 1 +
s(fips, bs = "re") + # random effect of county
age + I(age^2) +
factor(dual) + factor(race) + factor(sexM) +
cb +
education + poverty + PIR + # price to income ratio
pct_blk + hispanic + popdensity + pct_owner_occ,
data = qid_dat,
paraPen = list(cb = cb_pen),
family = binomial,
nthreads = 8,
control = gam.control(trace = TRUE))
cp <- crosspred(cb, m2, cen = 5, at = seq(5, 15, by = 0.1), bylag = 0.2)
plot(cp, "slices", var = 10)
##### 3. DLM analysis - TDLM #####
library(dlmtree)
(splits <- quantile(pm25_dat[pm25_dat > 0], c(0.01, 0.05, 1:9/10, 0.95, 0.99)))
(splits <- quantile(pm25_dat[,1:10], c(0.01, 0.05, 1:9/10, 0.95, 0.99)))
m <- tdlnm(first_hosp ~ factor(year) - 1 +
age_corrected + I(age_corrected^2) + dual + race + sexM +
education + poverty +
I(medianhousevalue/medhouseholdincome) +
pct_blk + hispanic + popdensity + pct_owner_occ,
data = qid_dat,
exposure.data = pm25_dat[,1:10],
exposure.splits = splits,
exposure.se = sd(pm25_dat[pm25_dat > 0]) / 2,
monotone = TRUE, zirt.p0 = 0.99,
family = "logit",
n.trees = 10, n.burn = 200, n.iter = 500, n.thin = 5,
max.threads = 4)
m <- tdlnm(first_hosp ~ factor(year) - 1 +
age_corrected + I(age_corrected^2) + dual + race + sexM +
education + poverty +
I(medianhousevalue/medhouseholdincome) +
pct_blk + hispanic + popdensity + pct_owner_occ,
data = qid_dat,
exposure.data = pm25_dat[,1:10],
exposure.splits = splits,
exposure.se = sd(pm25_dat[,1:10]) / 2,
monotone = TRUE, zirt.p0 = 0.99,
family = "logit",
n.trees = 10, n.burn = 200, n.iter = 500, n.thin = 5,
max.threads = 4)
(s <- summary(m, cenval = 5))#, cenval = splits[3]))
plot(s)
plot(s, "slice", time = 1)
?tdlnm
m <- tdlnm(first_hosp ~ factor(year) - 1 +
age_corrected + I(age_corrected^2) + dual + race + sexM +
education + poverty +
I(medianhousevalue/medhouseholdincome) +
pct_blk + hispanic + popdensity + pct_owner_occ,
data = qid_dat,
subset = sample(qid_dat[,.N], 100000),
exposure.data = pm25_dat[,1:10],
exposure.splits = splits,
exposure.se = sd(pm25_dat[,1:10]) / 2,
monotone = TRUE, zirt.p0 = 0.999,
family = "logit",
n.trees = 10, n.burn = 2000, n.iter = 5000, n.thin = 5,
max.threads = 4)
(s <- summary(m, cenval = 5))#, cenval = splits[3]))
plot(s)
D<-sim.tdlmm(n=5000)
d<-tdlnm(y~., D$dat, D$exposures[[1]])
(ds<-summary(d))
plot(ds)
d<-tdlnm(y~., D$dat, D$exposures[[1]], max.threads = 8)
(ds<-summary(d))
plot(ds)
d<-tdlnm(y~., D$dat, D$exposures[[1]], family = "logit", max.threads = 8)
(ds<-summary(d))
plot(ds)
rm(D,d,ds)
m <- tdlnm(first_hosp ~ factor(year) - 1 +
age_corrected + I(age_corrected^2) + dual + race + sexM +
education + poverty +
I(medianhousevalue/medhouseholdincome) +
pct_blk + hispanic + popdensity + pct_owner_occ,
data = qid_dat,
subset = sample(qid_dat[,.N], 100000),
exposure.data = pm25_dat[,1:10],
exposure.splits = splits,
exposure.se = sd(pm25_dat[,1:10]) / 2,
monotone = TRUE, zirt.p0 = 0.9999,
family = "logit",
n.trees = 10, n.burn = 2000, n.iter = 5000, n.thin = 5,
max.threads = 4)
(s <- summary(m, cenval = 5))#, cenval = splits[3]))
plot(s)
plot(s, "slice", time = 1)
m <- tdlnm(first_hosp ~ factor(year) - 1 +
age_corrected + I(age_corrected^2) + dual + race + sexM +
education + poverty +
I(medianhousevalue/medhouseholdincome) +
pct_blk + hispanic + popdensity + pct_owner_occ,
data = qid_dat,
subset = sample(qid_dat[,.N], 500000),
exposure.data = pm25_dat[,1:10],
exposure.splits = splits,
exposure.se = sd(pm25_dat[,1:10]) / 2,
monotone = TRUE, zirt.p0 = 0.99,
family = "logit",
n.trees = 10, n.burn = 2000, n.iter = 5000, n.thin = 5,
max.threads = 4)
(s <- summary(m, cenval = 5))#, cenval = splits[3]))
plot(s)
plot(s, "slice", time = 1)
(splits <- quantile(pm25_dat[,1:10], c(0.01, 0.05, 1:9/10, 0.95, 0.99)))
m <- tdlnm(first_hosp ~ factor(year) - 1 + factor(fips) +
age_corrected + I(age_corrected^2) + dual + race + sexM +
education + poverty +
I(medianhousevalue/medhouseholdincome) +
pct_blk + hispanic + popdensity + pct_owner_occ,
data = qid_dat,
exposure.data = pm25_dat[,1:10],
exposure.splits = splits,
exposure.se = sd(pm25_dat[,1:10]) / 2,
family = "logit",
n.trees = 10, n.burn = 2000, n.iter = 5000, n.thin = 5,
max.threads = 6)
save(m, file = paste0(dir_data, "analysis/tdlnm_state", state, "_", AD_ADRD, "_",
code_type, "_pm25.rda"))
(s <- summary(m, cenval = 5))#, cenval = splits[3]))
plot(s)
plot(s, "slice", time = 1)
plot(s, "cumulative")
plot(s, "slice", time = 2)
plot(s, "slice", time = 2)
plot(s, "slice", time = 4)
plot(s, "slice", time = 5)
plot(s, "slice", time = 7)
plot(s, "slice", time = 9)
plot(s, "slice", time = 10)
plot(s, "slice", time = 3)
plot(s, "slice", time = 1)
plot(s)
plot(s, "slice", val = 10)
plot(s, "slice", val = 15)
plot(s, "slice", val = 20)
plot(s, "slice", val = 8)
plot(s, "slice", val = 4)
plot(s, "slice", val = 9)
plot(s, "slice", val = 10)
plot(s, "slice", val = 12)
plot(s, "slice", val = 15)
plot(s, "cumulative")
(s <- summary(m, cenval = 11))#, cenval = splits[3]))
plot(s)
plot(s, "slice", time = 1)
plot(s, "slice", val = 15)
plot(s, "cumulative")
splits
(s <- summary(m, cenval = 8.84))#, cenval = splits[3]))
plot(s)
plot(s, "slice", time = 1)
plot(s, "slice", val = 15)
plot(s, "cumulative")
(s <- summary(m, cenval = 0))#, cenval = splits[3]))
plot(s)
plot(s, "slice", time = 1)
plot(s, "slice", val = 15)
plot(s, "cumulative")
(s <- summary(m, cenval = 5))#, cenval = splits[3]))
plot(s)
plot(s, "slice", time = 1)
plot(s, "slice", val = 15)
plot(s, "cumulative")
rm(list=ls())
gc()
library(data.table)
library(fst)
dir_denominator <- "/nfs/home/D/dam9096/shared_space/ci3_health_data/medicare/mortality/1999_2016/wu/cache_data/merged_by_year_v2/"
f <- list.files(dir_denominator, pattern = "\\.fst", full.names = TRUE)
myvars <- c("qid", "year", "zip", "hmo_mo", "age")
myvars <- c("qid", "year", "age")
f
dt09_10 <- rbindlist(list(read_fst(f[11], as.data.table = TRUE),
read_fst(f[12], as.data.table = TRUE)))
