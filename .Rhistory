xlab("Years prior") +
theme(panel.grid.minor = element_blank(), panel.grid.major = element_blank())
expDLM[(CW)]
expDLM[(CW)&Effect>0]
ggplot(expDLM, aes(x = Week, y = exp(Effect), ymin = exp(Lower), ymax = exp(Upper))) +
geom_hline(yintercept = 1, color = "red", size = 1) +
geom_ribbon(fill = "grey", col = "grey", size = 2) +
geom_line(size = 1) +
facet_wrap(~Name, ncol = 6) +
theme_bw(base_size = 12) +
theme(strip.background = element_rect(fill = "#DDDDDD")) +
scale_x_continuous(expand = c(0, 0)) +
scale_y_continuous(expand = c(0, 0)) +
ylab("Change in outcome for IQR change in exposure \nadjusting for expected changes in co-exposures") +
xlab("Years prior") +
theme(panel.grid.minor = element_blank(), panel.grid.major = element_blank())
rm(list = ls())
gc()
##### 0. Setup #####
region <- "NE"
AD_ADRD <- "ADRD" # AD or ADRD
code_type <- "any" # primary or any
library(data.table)
library(fst)
library(NSAPHutils)
options(stringsAsFactors = FALSE)
setDTthreads(threads = 8)
dir_data <- "/nfs/home/D/dam9096/shared_space/ci3_analysis/dmork/Data/DLM_ADRD/"
##### 1. Load relevant data #####
qid_dat <- read_fst(paste0(dir_data, "analysis/region", region, "_", AD_ADRD, "_",
code_type, "_qid.fst"), as.data.table = TRUE)
exp_names <- c(paste0("pm25comp_", c("br", "ca", "cu", "ec", "fe", "k", "nh4", "ni",
"no3", "oc", "pb", "si", "so4", "v", "z")),
"no2", "ozone", "tmmx", "rmax")
lag_cols <- paste0("lag", 1:10)
exposures <- list()
for (e in exp_names) {
exposures[[e]] <- as.matrix(
read_fst(paste0(dir_data, "analysis/region", region, "_", AD_ADRD,
"_", code_type, "_", e, ".fst"), columns = lag_cols,
as.data.table = TRUE))
}
##### 2. Restrict to complete follow-up 2010 through 2016, no deaths #####
idx <- which(qid_dat$entry == 2000 & # follow up from 2000
qid_dat$year > 2009) # year 2010 and later for 10 lag years exposures
qid_dat <- qid_dat[idx]
exposures <- lapply(names(exposures), function(e) exposures[[e]][idx,])
names(exposures) <- exp_names
##### Remove rows with missing exposure data #####
idx <- 1:nrow(qid_dat)
for (e in exp_names) {
idx <- intersect(idx, which(rowSums(is.na(exposures[[e]])) == 0))
}
qid_dat <- qid_dat[idx]
exposures <- lapply(names(exposures), function(e) exposures[[e]][idx,])
names(exposures) <- exp_names
##### Data fixes #####
qid_dat[, age_corrected := entry_age + year - entry]
qid_dat[, PIR := medianhousevalue/medhouseholdincome]
# clear missing data, infinite PIR
idx2 <- which(!is.infinite(qid_dat$PIR) &
complete.cases(qid_dat[,.(year, age_corrected, dual, race, sexM,
education, poverty, pct_blk, hispanic,
popdensity, pct_owner_occ, PIR)]))
qid_dat <- qid_dat[idx2]
exposures <- lapply(names(exposures), function(e) exposures[[e]][idx2,])
names(exposures) <- exp_names
##### Remove QID after missing year of data #####
idx3 <- which(qid_dat$year == 2010)
qid_rm <- qid_dat[idx3, qid]
for (yr in 2011:2016) {
idx3 <- c(idx3, which(qid_dat$year == yr & qid_dat$qid %in% qid_rm))
qid_rm <- qid_dat[idx3][year == yr, qid]
}
qid_dat <- qid_dat[idx3]
exposures <- lapply(names(exposures), function(e) exposures[[e]][idx3,])
names(exposures) <- exp_names
rm(idx, idx2, idx3, qid_rm)
##### Summary stats #####
qid_dat[, .N]
#### Lag 1 correlations ####
l1exp <- sapply(exposures, function(e) e[,1])
l1cor <- cor(l1exp)
corrplot::corrplot(l1cor, type = "lower", method = "square")
##### 4. DLMM analysis - TDLMM #####
library(dlmtree)
library(mgcv)
set.seed(8372)
qid_samp <- qid_dat[year == 2010, qid][sample(qid_dat[year == 2010, .N], 1000000)]
qid_dat[qid %in% qid_samp, .N] #2484214
qid_dat[qid %in% qid_samp, .N] #4972500
form <- as.formula(first_hosp ~ factor(year) +
age_corrected + I(age_corrected^2) +
factor(dual) + factor(race) + factor(sexM) +
education + poverty + PIR +
pct_blk + hispanic + popdensity + pct_owner_occ)
init.params <- bam(form,
data = qid_dat[qid %in% qid_samp],
family = binomial,
nthreads = 1, samfrac = 0.05, chunk.size = 5000,
control = gam.control(trace = TRUE))$coefficients
exp_names <- c("br", "ca", "cu", "ec", "fe", "k", "nh4", "ni",
"no3", "oc", "pb", "si", "so4", "v", "z",
"no2", "ozone", "tmmx", "rmax")
exp_names <- c("br", "ca", "cu", "ec", "fe", "k", "nh4", "ni",
"no3", "oc", "pb", "si", "so4", "v", "z",
"no2", "ozone", "tmmx", "rmax")
names(exposures) <- exp_names
names(exposures)
#### Lag 1 correlations ####
l1exp <- sapply(exposures, function(e) e[,1])
l1cor <- cor(l1exp)
corrplot::corrplot(l1cor, type = "lower", method = "square")
##### 4. DLMM analysis - TDLMM #####
library(dlmtree)
library(mgcv)
set.seed(8372)
qid_samp <- qid_dat[year == 2010, qid][sample(qid_dat[year == 2010, .N], 1000000)]
qid_dat[qid %in% qid_samp, .N] #4972500
mm <- tdlmm(form,
data = qid_dat,
exposure.data = exposures, # 15 pm components, no2, ozone, tmmx, rmax
mixture.interactions = "noself",
family = "logit", shrinkage = "exposures",
subset = which(qid_dat$qid %in% qid_samp),
mix.prior = 0.347, # prior inc prob = 0.5
n.trees = 20,
n.burn = 1000, n.iter = 2000, n.thin = 4,
initial.params = init.params)
save(mm, file = paste0(dir_data, "analysis/tdlmm1M_20_0.5_region",
region, "_", AD_ADRD, "_",
code_type, "_pm25comp.rda"))
(ss <- summary(mm))
rm(list = ls())
gc()
##### 0. Setup #####
region <- "NE"
AD_ADRD <- "ADRD" # AD or ADRD
code_type <- "any" # primary or any
library(data.table)
library(fst)
library(NSAPHutils)
options(stringsAsFactors = FALSE)
setDTthreads(threads = 8)
dir_data <- "/nfs/home/D/dam9096/shared_space/ci3_analysis/dmork/Data/DLM_ADRD/"
##### 1. Load relevant data #####
qid_dat <- read_fst(paste0(dir_data, "analysis/region", region, "_", AD_ADRD, "_",
code_type, "_qid.fst"), as.data.table = TRUE)
exp_names <- c(paste0("pm25comp_", c("br", "ca", "cu", "ec", "fe", "k", "nh4", "ni",
"no3", "oc", "pb", "si", "so4", "v", "z")),
"no2", "ozone", "tmmx", "rmax")
lag_cols <- paste0("lag", 1:10)
exposures <- list()
for (e in exp_names) {
exposures[[e]] <- as.matrix(
read_fst(paste0(dir_data, "analysis/region", region, "_", AD_ADRD,
"_", code_type, "_", e, ".fst"), columns = lag_cols,
as.data.table = TRUE))
}
exp_names <- c("br", "ca", "cu", "ec", "fe", "k", "nh4", "ni",
"no3", "oc", "pb", "si", "so4", "v", "z",
"no2", "ozone", "tmmx", "rmax")
names(exposures) <- exp_names
##### 2. Restrict to complete follow-up 2010 through 2016, no deaths #####
idx <- which(qid_dat$entry == 2000 & # follow up from 2000
qid_dat$year > 2009) # year 2010 and later for 10 lag years exposures
qid_dat <- qid_dat[idx]
exposures <- lapply(names(exposures), function(e) exposures[[e]][idx,])
names(exposures) <- exp_names
##### Remove rows with missing exposure data #####
idx <- 1:nrow(qid_dat)
for (e in exp_names) {
idx <- intersect(idx, which(rowSums(is.na(exposures[[e]])) == 0))
}
qid_dat <- qid_dat[idx]
exposures <- lapply(names(exposures), function(e) exposures[[e]][idx,])
names(exposures) <- exp_names
##### Data fixes #####
qid_dat[, age_corrected := entry_age + year - entry]
qid_dat[, PIR := medianhousevalue/medhouseholdincome]
# clear missing data, infinite PIR
idx2 <- which(!is.infinite(qid_dat$PIR) &
complete.cases(qid_dat[,.(year, age_corrected, dual, race, sexM,
education, poverty, pct_blk, hispanic,
popdensity, pct_owner_occ, PIR)]))
qid_dat <- qid_dat[idx2]
exposures <- lapply(names(exposures), function(e) exposures[[e]][idx2,])
names(exposures) <- exp_names
##### Remove QID after missing year of data #####
idx3 <- which(qid_dat$year == 2010)
qid_rm <- qid_dat[idx3, qid]
for (yr in 2011:2016) {
idx3 <- c(idx3, which(qid_dat$year == yr & qid_dat$qid %in% qid_rm))
qid_rm <- qid_dat[idx3][year == yr, qid]
}
qid_dat <- qid_dat[idx3]
exposures <- lapply(names(exposures), function(e) exposures[[e]][idx3,])
names(exposures) <- exp_names
rm(idx, idx2, idx3, qid_rm)
##### Summary stats #####
qid_dat[, .N]
#### Lag 1 correlations ####
l1exp <- sapply(exposures, function(e) e[,1])
l1cor <- cor(l1exp)
corrplot::corrplot(l1cor, type = "lower", method = "square")
##### 4. DLMM analysis - TDLMM #####
library(dlmtree)
library(mgcv)
set.seed(8372)
qid_samp <- qid_dat[year == 2010, qid][sample(qid_dat[year == 2010, .N], 1000000)]
qid_dat[qid %in% qid_samp, .N] # 4972500
form <- as.formula(first_hosp ~ factor(year) +
age_corrected + I(age_corrected^2) +
factor(dual) + factor(race) + factor(sexM) +
education + poverty + PIR +
pct_blk + hispanic + popdensity + pct_owner_occ)
init.params <- bam(form,
data = qid_dat[qid %in% qid_samp],
family = binomial,
nthreads = 1, samfrac = 0.05, chunk.size = 5000,
control = gam.control(trace = TRUE))$coefficients
mm <- tdlmm(form,
data = qid_dat,
exposure.data = exposures, # 15 pm components, no2, ozone, tmmx, rmax
mixture.interactions = "noself",
family = "logit", shrinkage = "exposures",
subset = which(qid_dat$qid %in% qid_samp),
mix.prior = 0.347, # prior inc prob = 0.5
n.trees = 20,
n.burn = 1000, n.iter = 2000, n.thin = 4,
initial.params = init.params)
save(mm, file = paste0(dir_data, "analysis/tdlmm1M_20_0.5_region",
region, "_", AD_ADRD, "_",
code_type, "_pm25comp.rda"))
(ss <- summary(mm))
##### Setup #####
AD_ADRD <- "ADRD" # AD or ADRD
code_type <- "any" # primary or any
n_threads = 16
library(data.table)
library(fst)
library(NSAPHutils)
options(stringsAsFactors = FALSE)
Sys.setenv(OMP_NUM_THREADS = n_threads)
setDTthreads(threads = n_threads)
dir_data <- "/nfs/home/D/dam9096/shared_space/ci3_analysis/dmork/Data/DLM_ADRD/"
##### Load cleaned data #####
qid_dat <- read_fst(paste0(dir_data, "analysis/contUS_", AD_ADRD, "_",
code_type, "_qid_clean.fst"), as.data.table = TRUE)
pm25_dat <- as.matrix(read_fst(paste0(dir_data, "analysis/contUS_", AD_ADRD, "_",
code_type, "_pm25_clean.fst")))
no2_dat <- as.matrix(read_fst(paste0(dir_data, "analysis/contUS_", AD_ADRD, "_",
code_type, "_no2_clean.fst")))
ozone_dat <- as.matrix(read_fst(paste0(dir_data, "analysis/contUS_", AD_ADRD, "_",
code_type, "_ozone_clean.fst")))
oxidant <- (1.07 * no2_dat + 2.075 * ozone_dat) / 3.145
write_fst(as.data.frame(oxidant), paste0(dir_data, "analysis/contUS_", AD_ADRD, "_",
code_type, "_oxidant_clean.fst"))
exp="pm25"
for (exp in c("pm25")) {
cat("\n", exp)
exp_dat <- as.matrix(read_fst(paste0(dir_data, "analysis/contUS_", AD_ADRD, "_",
code_type, "_", exp, "_clean.fst")))[,1:10]
exp_iqr <- IQR(exp_dat)
prD <- bam(dead ~ exp_dat[,1] + factor(year),
data = qid_dat, family = binomial,
nthreads = 1, samfrac = 0.01, chunk.size = 5000,
control = gam.control(trace = TRUE))
prD_L <- bam(dead ~ exp_dat[,1] +
factor(year) + factor(statecode) +
age_corrected + I(age_corrected^2) +
factor(dual) + factor(race) + factor(sexM) +
education + poverty + PIR +
pct_blk + hispanic + popdensity + pct_owner_occ,
data = qid_dat, family = binomial,
nthreads = 1, samfrac = 0.01, chunk.size = 5000,
control = gam.control(trace = TRUE))
qid_dat[, IPWcr := (1 - prD$fitted.values) / (1 - prD_L$fitted.values)]
qid_dat[IPWcr > 10, IPWcr := 10]
rm(prD, prD_L)
m3 <- bam(first_hosp ~ exp_dat[,1] +
factor(year) + factor(statecode) +
factor(dual) + factor(race) + factor(sexM) +
age_corrected + I(age_corrected^2) +
education + poverty + PIR +
pct_blk + hispanic + popdensity + pct_owner_occ,
data = qid_dat, weights = qid_dat$IPWcr,
family = binomial,
nthreads = 1, samfrac = 0.01, chunk.size = 5000,
control = gam.control(trace = TRUE))
res <- list(est = m3$coef, iqr = exp_iqr)
cat(", HO = ", exp(m3$coef[2]))
save(res, exp_iqr,
file = paste0(dir_data, "analysis/gam_1yr_comprisk_contUS_",
AD_ADRD, "_", code_type, "_", exp, ".rda"))
rm(cb_dlm, m3); gc()
}
##### 1 yr exposure #####
library(mgcv)
library(dlnm)
for (exp in c("pm25")) {
cat("\n", exp)
exp_dat <- as.matrix(read_fst(paste0(dir_data, "analysis/contUS_", AD_ADRD, "_",
code_type, "_", exp, "_clean.fst")))[,1:10]
exp_iqr <- IQR(exp_dat)
prD <- bam(dead ~ exp_dat[,1] + factor(year),
data = qid_dat, family = binomial,
nthreads = 1, samfrac = 0.01, chunk.size = 5000,
control = gam.control(trace = TRUE))
prD_L <- bam(dead ~ exp_dat[,1] +
factor(year) + factor(statecode) +
age_corrected + I(age_corrected^2) +
factor(dual) + factor(race) + factor(sexM) +
education + poverty + PIR +
pct_blk + hispanic + popdensity + pct_owner_occ,
data = qid_dat, family = binomial,
nthreads = 1, samfrac = 0.01, chunk.size = 5000,
control = gam.control(trace = TRUE))
qid_dat[, IPWcr := (1 - prD$fitted.values) / (1 - prD_L$fitted.values)]
qid_dat[IPWcr > 10, IPWcr := 10]
rm(prD, prD_L)
m3 <- bam(first_hosp ~ exp_dat[,1] +
factor(year) + factor(statecode) +
factor(dual) + factor(race) + factor(sexM) +
age_corrected + I(age_corrected^2) +
education + poverty + PIR +
pct_blk + hispanic + popdensity + pct_owner_occ,
data = qid_dat, weights = qid_dat$IPWcr,
family = binomial,
nthreads = 1, samfrac = 0.01, chunk.size = 5000,
control = gam.control(trace = TRUE))
res <- list(est = m3$coef, iqr = exp_iqr)
cat(", HO = ", exp(m3$coef[2]))
save(res, exp_iqr,
file = paste0(dir_data, "analysis/gam_1yr_comprisk_contUS_",
AD_ADRD, "_", code_type, "_", exp, ".rda"))
rm(cb_dlm, m3); gc()
}
for (exp in c("pm25")) {
cat("\n", exp)
exp_dat <- as.matrix(read_fst(paste0(dir_data, "analysis/contUS_", AD_ADRD, "_",
code_type, "_", exp, "_clean.fst")))[,1:10]
exp_iqr <- IQR(exp_dat)
prD <- bam(dead ~ exp_dat[,1] + factor(year),
data = qid_dat, family = binomial,
nthreads = 1, samfrac = 0.01, chunk.size = 5000,
control = gam.control(trace = TRUE))
prD_L <- bam(dead ~ exp_dat[,1] +
factor(year) + factor(statecode) +
age_corrected + I(age_corrected^2) +
factor(dual) + factor(race) + factor(sexM) +
education + poverty + PIR +
pct_blk + hispanic + popdensity + pct_owner_occ,
data = qid_dat, family = binomial,
nthreads = 1, samfrac = 0.01, chunk.size = 5000,
control = gam.control(trace = TRUE))
qid_dat[, IPWcr := (1 - prD$fitted.values) / (1 - prD_L$fitted.values)]
qid_dat[IPWcr > 10, IPWcr := 10]
rm(prD, prD_L)
m3 <- bam(first_hosp ~ exp_dat[,1] +
factor(year) + factor(statecode) +
factor(dual) + factor(race) + factor(sexM) +
age_corrected + I(age_corrected^2) +
education + poverty + PIR +
pct_blk + hispanic + popdensity + pct_owner_occ,
data = qid_dat, weights = qid_dat$IPWcr,
family = binomial,
nthreads = 1, samfrac = 0.01, chunk.size = 5000,
control = gam.control(trace = TRUE))
res <- list(est = m3$coef, iqr = exp_iqr)
cat(", HO = ", exp(m3$coef[2]))
save(res, exp_iqr,
file = paste0(dir_data, "analysis/gam_1yr_comprisk_contUS_",
AD_ADRD, "_", code_type, "_", exp, ".rda"))
# rm(cb_dlm, m3); gc()
}
rm(no2_dat,oxidant,ozone_dat,pm25_dat)
gc()
m3 <- bam(first_hosp ~ exp_dat[,1] +
factor(year) + factor(statecode) +
factor(dual) + factor(race) + factor(sexM) +
age_corrected + I(age_corrected^2) +
education + poverty + PIR +
pct_blk + hispanic + popdensity + pct_owner_occ,
data = qid_dat, weights = qid_dat$IPWcr,
family = binomial,
nthreads = 1, samfrac = 0.05, chunk.size = 5000,
control = gam.control(trace = TRUE))
res <- list(est = m3$coef, iqr = exp_iqr)
cat(", HO = ", exp(m3$coef[2]))
##### Setup #####
AD_ADRD <- "ADRD" # AD or ADRD
code_type <- "any" # primary or any
n_threads = 16
library(data.table)
library(fst)
library(NSAPHutils)
options(stringsAsFactors = FALSE)
Sys.setenv(OMP_NUM_THREADS = n_threads)
setDTthreads(threads = n_threads)
dir_data <- "/nfs/home/D/dam9096/shared_space/ci3_analysis/dmork/Data/DLM_ADRD/"
##### 1 yr exposure #####
library(mgcv)
library(dlnm)
AD_ADRD <- "ADRD" # AD or ADRD
code_type <- "any" # primary or any
dir_data <- "/nfs/home/D/dam9096/shared_space/ci3_analysis/dmork/Data/DLM_ADRD/"
qid_dat <- read_fst(paste0(dir_data, "analysis/contUS_", AD_ADRD, "_",
code_type, "_qid_clean.fst"),
as.data.table = TRUE)
id10 <- which(qid_dat$year == 2010)
for (exp in c("pm25", "no2", "ozone", "oxidant")) {
cat("\n", exp)
exp_dat <- as.matrix(read_fst(paste0(dir_data, "analysis/contUS_", AD_ADRD, "_",
code_type, "_", exp, "_clean.fst")))[,1:10]
exp_mean <- rowMeans(exp_dat[id10, 1:10])
exp_iqr <- IQR(exp_mean)
prD <- bam(dead ~ exp_dat[,1] + factor(year),
data = qid_dat, family = binomial,
nthreads = 1, samfrac = 0.05, chunk.size = 5000,
control = gam.control(trace = TRUE))
prD_L <- bam(dead ~ exp_dat[,1] +
factor(year) + factor(statecode) +
age_corrected + I(age_corrected^2) +
factor(dual) + factor(race) + factor(sexM) +
education + poverty + PIR +
pct_blk + hispanic + popdensity + pct_owner_occ,
data = qid_dat, family = binomial,
nthreads = 1, samfrac = 0.05, chunk.size = 5000,
control = gam.control(trace = TRUE))
qid_dat[, IPWcr := (1 - prD$fitted.values) / (1 - prD_L$fitted.values)]
qid_dat[IPWcr > 10, IPWcr := 10]
rm(prD, prD_L)
m3 <- bam(first_hosp ~ exp_dat[,1] +
factor(year) + factor(statecode) +
factor(dual) + factor(race) + factor(sexM) +
age_corrected + I(age_corrected^2) +
education + poverty + PIR +
pct_blk + hispanic + popdensity + pct_owner_occ,
data = qid_dat, weights = qid_dat$IPWcr,
family = binomial,
nthreads = 1, samfrac = 0.05, chunk.size = 5000,
control = gam.control(trace = TRUE))
res <- list(est = m3$coef, iqr = exp_iqr)
cat(", HO = ", exp(m3$coef[2]))
stop()
save(res, exp_iqr,
file = paste0(dir_data, "analysis/gam_1yr_comprisk_contUS_",
AD_ADRD, "_", code_type, "_", exp, ".rda"))
# rm(cb_dlm, m3); gc()
}
cat(", HO = ", exp(m3$coef[2]))
cat(", HO = ", exp(m3$coef[2] * exp_iqr))
cat(", HO = ", exp(m3$coef[2] * 5))
m3$coefficients[2]
cat(", HO = ", exp(m3$coefficients[2] * exp_iqr))
res <- list(est = m3$coef, iqr = exp_iqr)
res <- list(est = m3$coefficients, iqr = exp_iqr)
m3$var.summary$exp_dat
m3$var.summary$year
m3
s3<-summary(m3)
s3$se
s3$p.coeff
res <- list(est = s3$p.coeff, se = s3$se, iqr = exp_iqr)
cat(", HO = ", exp(m3$coefficients[2] * exp_iqr))
res
save(res, exp_iqr,
file = paste0(dir_data, "analysis/gam_1yr_comprisk_contUS_",
AD_ADRD, "_", code_type, "_", exp, ".rda"))
rm(cb_dlm, m3); gc()
rm(s3, m3); gc()
for (exp in c("no2", "ozone", "oxidant")) {
cat("\n", exp)
exp_dat <- as.matrix(read_fst(paste0(dir_data, "analysis/contUS_", AD_ADRD, "_",
code_type, "_", exp, "_clean.fst")))[,1:10]
exp_mean <- rowMeans(exp_dat[id10, 1:10])
exp_iqr <- IQR(exp_mean)
prD <- bam(dead ~ exp_dat[,1] + factor(year),
data = qid_dat, family = binomial,
nthreads = 1, samfrac = 0.05, chunk.size = 5000,
control = gam.control(trace = TRUE))
prD_L <- bam(dead ~ exp_dat[,1] +
factor(year) + factor(statecode) +
age_corrected + I(age_corrected^2) +
factor(dual) + factor(race) + factor(sexM) +
education + poverty + PIR +
pct_blk + hispanic + popdensity + pct_owner_occ,
data = qid_dat, family = binomial,
nthreads = 1, samfrac = 0.05, chunk.size = 5000,
control = gam.control(trace = TRUE))
qid_dat[, IPWcr := (1 - prD$fitted.values) / (1 - prD_L$fitted.values)]
qid_dat[IPWcr > 10, IPWcr := 10]
rm(prD, prD_L)
m3 <- bam(first_hosp ~ exp_dat[,1] +
factor(year) + factor(statecode) +
factor(dual) + factor(race) + factor(sexM) +
age_corrected + I(age_corrected^2) +
education + poverty + PIR +
pct_blk + hispanic + popdensity + pct_owner_occ,
data = qid_dat, weights = qid_dat$IPWcr,
family = binomial,
nthreads = 1, samfrac = 0.05, chunk.size = 5000,
control = gam.control(trace = TRUE))
s3 <- summary(m3)
res <- list(est = s3$p.coeff, se = s3$se, iqr = exp_iqr)
cat(", HO = ", exp(m3$coefficients[2] * exp_iqr))
save(res, exp_iqr,
file = paste0(dir_data, "analysis/gam_1yr_comprisk_contUS_",
AD_ADRD, "_", code_type, "_", exp, ".rda"))
rm(s3, m3); gc()
}
